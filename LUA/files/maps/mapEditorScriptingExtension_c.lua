-- FILE: 	mapEditorScriptingExtension_c.lua-- PURPOSE:	Prevent the map editor feature set being limited by what MTA can load from a map file by adding a script file to maps-- VERSION:	RemoveWorldObjects (v1) AutoLOD (v1) BreakableObjects (v1)function requestLODsClient()	triggerServerEvent("requestLODsClient", resourceRoot)endaddEventHandler("onClientResourceStart", resourceRoot, requestLODsClient)function setLODsClient(lodTbl)	for i, model in ipairs(lodTbl) do		engineSetModelLODDistance(model, 300)	endendaddEvent("setLODsClient", true)addEventHandler("setLODsClient", resourceRoot, setLODsClient)function applyBreakableState()	for k, obj in pairs(getElementsByType("object", resourceRoot)) do		local breakable = getElementData(obj, "breakable")		if breakable then			setObjectBreakable(obj, breakable == "true")		end	endendaddEventHandler("onClientResourceStart", resourceRoot, applyBreakableState)local prioritizedModels = {	[1339] = true, -- grotti wände	[1649] = true, -- grotti fenster	[2757] = true, -- grotti dach	[3529] = true, -- pfeiler stadthalle	[3964] = true, -- holzboden	[3965] = true, -- weiße bodenplatten	[3966] = true, -- graßboden	[9560] = true, -- boden stadthalle	[9562] = true, -- graßboden stadthalle}--[[addEventHandler("onClientElementStreamIn", root, function()	local id = getElementModel(source)	if (prioritizedModels[id]) then		--outputChatBox("STREAMING: ALWAYS")		setElementStreamable(source, false)	endend)addEventHandler("onClientElementStreamOut", root, function()	local id = getElementModel(source)	--outputChatBox("@onClientElementStreamOut: "..id)	if (prioritizedModels[id]) then		--outputChatBox("STREAMING: RESET")		setElementStreamable(source, true)	endend)]]