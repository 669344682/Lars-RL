-------------------------------------------------------------------------------------------------------------- Copyright (c) 2014-2018 FirstOne Media ------
----------------------------------------------------
------ Commercial use or Copyright removal is ------
------ strictly prohibited without permission --------------------------------------------------------------------------------------------------------------local fuelTimers = {}local vehPositions = {}function toggleVehicleEngine(player)	if (isPedInVehicle(player) and getPedOccupiedVehicleSeat(player) == 0) then		local veh = getPedOccupiedVehicle(player)		if (tonumber(getElementData(veh, "inTuning")) ~= nil) then return end				local id = getVehID(veh)		if (getElementData(veh, "motorworking") == true) then return end				if (not getElementData(veh, "isExploded")) then			if (getVehicleEngineState(veh) == false) then								if (not id or hasPlayerVehKey(player, veh) --[[or player:hasAdminLvl(3)]]) then										if (tonumber(getElementData(veh, "fuel")) > 0 or (type(Vehicles[id].data["fuel"]) == "number" and tonumber(Vehicles[id].data["fuel"]) > 0)) then												local x, y, z = getElementPosition(veh)						triggerClientEvent(root, "playSound3D", root, "motor_start", x, y, z, false)						setElementData(veh, "motorworking", true)						setTimer(function()							setElementData(veh, "motorworking", false)							setVehicleEngineState(veh, true)							setElementData(veh, "engine", true)														if (not settings.systems.vehicle.noEngine[getElementModel(veh)]) then								if (not isTimer(fuelTimers[veh])) then									fuelTimers[veh] = setTimer(function() updateVehicleFuel(veh) end, 5000, 0)								end							end						end, 1000, 1)											else						notificationShow(player, "info", "Dein Fahrzeug hat kein Benzin mehr. Besorg dir einen Benzinkanister an der Tankstelle.")					end									end							else				local x, y, z = getElementPosition(veh)				triggerClientEvent(root, "playSound3D", root, "motor_stop", x, y, z, false)				setVehicleEngineState(veh, false)				setElementData(veh, "engine", false)								killTimer(fuelTimers[veh])			end				else			notificationShow(player, "info", "Dein Fahrzeug hat einen Schaden, respawne bzw. lasse es reparieren.")		end	endendlocal function toggleVehicleLights(player)	if (isPedInVehicle(player) and getPedOccupiedVehicleSeat(player) == 0) then		local veh = getPedOccupiedVehicle(player)		if (tonumber(getElementData(veh, "inTuning")) ~= nil) then return end				if (getVehicleOverrideLights(veh) ~= 2) then			setVehicleOverrideLights(veh, 2)			toggleNeon(veh, true)		else			setVehicleOverrideLights(veh, 1)			toggleNeon(veh, false)		end	endendlocal function vehicleEnter(veh, seat)	if (seat == 0) then		if (getElementType(source) == "player") then						local engine = (getElementData(veh, "engine") or false)			setVehicleEngineState(veh, engine)			setElementData(veh, "engine", engine)			if (not getElementData(veh, "fuel")) then				setElementData(veh, "fuel", 100)			end						if (getElementData(veh, "handbrake") == true) then				setControlState(source, "handbrake", true)				setElementFrozen(veh, false)			end			if (isElementFrozen(veh)) then				setElementData(veh, "handbrake", true)				infoShow(source, "info", "Die Handbremse ist angezogen, drücke 'G' um sie zu lösen.")			end			if (getElementData(veh, "handbrake") == true and not isElementFrozen(veh)) then				infoShow(source, "info", "Die Handbremse ist angezogen, drücke 'G' um sie zu lösen.")			end			if (getElementData(veh, "smokeThrower") == true and not isElementFrozen(veh)) then				infoShow(source, "info", "Mit 'N' kannst Du den Nebelwerfer aktivieren.")			end						if (getElementType(source) == "player") then				if (not isKeyBound(source, "l", "down", toggleVehicleLights)) then					bindKey(source, "l", "down", toggleVehicleLights, "Licht an/aus")				end									if (not isKeyBound(source, "x", "down", toggleVehicleEngine)) then						bindKey(source, "x", "down", toggleVehicleEngine, "Motor an/aus")				end								if (not isKeyBound(source, "g", "down", toggleBreak)) then					bindKey(source, "g", "down", toggleBreak, "Handbremse an/aus")				end								if (not isKeyBound(source, "n", "down", activateSmokeThrower)) then					bindKey(source, "n", "down", activateSmokeThrower, "Nebelwerfer")				end								if (not isKeyBound(source, ",", "down", leftBlinker_statechange)) then					bindKey(source, ",", "down", leftBlinker_statechange, "Blinker rechts")				end								if (not isKeyBound(source, "-", "down", rightBlinker_statechange)) then					bindKey(source, "-", "down", rightBlinker_statechange, "Blinker links")				end				if (not isKeyBound(source, ".", "down", allBlinker_statechange)) then					bindKey(source, ".", "down", allBlinker_statechange, "Warnblinker")				end				setBlinker_func(source)			end					end	endendaddEventHandler("onPlayerVehicleEnter", root, vehicleEnter)local function vehicleExit(veh, seat)	if (seat == 0) then		if (not isKeyBound(source, "l", "down", toggleVehicleLights)) then			unbindKey(source, "l", "down", toggleVehicleLights)		end				if (not isKeyBound(source, "x", "down", toggleVehicleEngine)) then				unbindKey(source, "x", "down", toggleVehicleEngine)		end				if (isKeyBound(source, "g", "down", toggleBreak)) then			unbindKey(source, "g", "down", toggleBreak)		end				if (isKeyBound(source, ",", "down", leftBlinker_statechange)) then			unbindKey(source, ",", "down", leftBlinker_statechange)		end		if (isKeyBound(source, "-", "down", rightBlinker_statechange)) then			unbindKey(source, "-", "down", rightBlinker_statechange)		end		if (isKeyBound(source, ".", "down", allBlinker_statechange)) then			unbindKey(source, ".", "down", allBlinker_statechange)		end				triggerClientEvent(source, "blinkerSTOP_sound", root)				if (getElementData(veh, "handbrake") == true) then			setElementFrozen(veh, true)		end	endendaddEventHandler("onPlayerVehicleExit", root, vehicleExit)function updateVehicleFuel(veh)	local vID = getVehID(veh)		if (isElement(veh) and tonumber(getElementData(veh, "fuel")) ~= nil) then		if (getVehicleEngineState(veh)) then						local tankSize, usage = getVehicleFuelSizeUsage(veh)			usage = usage * 5						local speed = getElementSpeed(veh)			if (speed >= 150) then				usage = (usage*100) / 70			elseif (speed >= 100) then				usage = usage			elseif (speed >= 3) then				usage = (usage/100) * 70			else				usage = (usage/100) * 25			end						if (tonumber(vID) ~= nil and Vehicles[vID].saveFuel == true) then				usage = (usage/100) * 80			end						local fuel = tonumber(getElementData(veh, "fuel")) - tonumber(usage)			setElementData(veh, "fuel", fuel)			if (tonumber(vID) ~= nil) then				Vehicles[vID].data["fuel"] = fuel			end									if (fuel <= 0) then				setElementData(veh, "fuel", 0)				if (tonumber(vID) ~= nil) then					Vehicles[vID].data["fuel"] = 0				end								if (getVehicleOccupant(veh, 0)) then					notificationShow(getVehicleOccupant(veh, 0), "info", "Deinem Fahrzeug ist das Benzin ausgegangen. Besorg dir einen Benzinkanister an der Tankstelle.")				end								setVehicleEngineState(veh, false)				killTimer(fuelTimers[veh])							end									local cX, cY, cZ = getElementPosition(veh)			local lX, lY, lZ = 0, 0, 0			if (type(vehPositions[veh]) ~= "table") then				vehPositions[veh] = {0, 0, 0}				lX, lY, lZ = cX, cY, cZ			else				lX, lY, lZ = unpack(vehPositions[veh])			end			vehPositions[veh] = {cX, cY, cZ}						local dist	= getDistanceBetweenPoints3D(lX, lY, lZ, cX, cY, cZ) * 2			if (dist > 1500) then dist = 1500 end			local old	= 0			if (tonumber(vID) ~= nil) then				old = Vehicles[vID].data["meters"]			elseif (type(getElementData(veh, "meters")) == "number") then				old = tonumber(getElementData(veh, "meters"))			end						local new = old + dist			if (tonumber(vID) ~= nil) then				Vehicles[vID].data["meters"] = new			end			setElementData(veh, "meters", new)					end			else		killTimer(fuelTimers[veh])	endend